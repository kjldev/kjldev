---
interface Props {
	status: string;
}

const { status } = Astro.props;
let displayText = '';
let emoji = '';
let styleClasses = '';

switch (status) {
	case 'thinking':
		displayText = 'Thinking';
		emoji = 'ü§î';
		styleClasses =
			'text-xs text-white bg-gradient-to-r from-yellow-500 to-yellow-600 rounded-full px-3 py-1 shadow-md hover:shadow-lg transform hover:scale-105 transition duration-200 font-bold';
		break;
	case 'in-progress':
		displayText = 'In Progress';
		emoji = 'üöß';
		styleClasses =
			'text-xs text-white bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full px-3 py-1 shadow-md hover:shadow-lg transform hover:scale-105 transition duration-200 font-bold';
		break;
	case 'live':
		displayText = 'Live';
		emoji = 'üöÄ';
		styleClasses =
			'text-xs text-white bg-gradient-to-r from-green-500 to-teal-500 rounded-full px-3 py-1 shadow-md hover:shadow-lg transform hover:scale-105 transition duration-200 font-bold';
		break;
	case 'retired':
		displayText = 'Retired';
		emoji = 'ü™¶';
		styleClasses =
			'text-xs text-white bg-gradient-to-r from-gray-500 to-gray-700 rounded-full px-3 py-1 shadow-md transition duration-200 font-bold';
		break;
	default:
		displayText = 'Unknown';
		emoji = '‚ùì';
		styleClasses =
			'text-xs text-white bg-gray-500 rounded-full px-3 py-1 shadow-md transition duration-200 font-bold';
}
---

<span class={styleClasses}>
	{emoji}
	{displayText}
</span>
